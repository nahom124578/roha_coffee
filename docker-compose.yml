version: '3.8'

services:
  db:
    image: docker.io/postgres:16.1
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - api-network

  backend:
    build: .
    env_file:
      - .env
    environment:
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
    depends_on:
      db:
        condition: service_healthy

    command: >
     bash -c " python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             python manage.py seed_user &&
             python manage.py runserver 0.0.0.0:${BACKEND_PORT}"
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    restart: always
    volumes:
      - .:/app
    networks:
      - api-network

networks:
  api-network:
     driver: bridge

volumes:
  db_data:
